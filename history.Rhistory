summary(model6)
summary(model5)
View(model5)
model5$frame
frame()
plot(model5)
lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+union|nr),data = df, REML = F)
lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+union+educ+exper+expersq|nr),data = df, REML = F)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+union+educ+exper+expersq|nr),data = df, REML = F)
ranova(model8)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+exper+expersq|nr),data = df, REML = F)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+exper|nr),data = df, REML = F)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+expersq|nr),data = df, REML = F)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(1+exper|nr),data = df, REML = F)
summary(model8)
model8 <- lmer(lwage ~ 1 +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(exper|nr),data = df, REML = F)
summary(model8)
model8 <- lmer(lwage ~ +union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(exper|nr),data = df, REML = F)
model8 <- lmer(lwage ~ union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(exper|nr),data = df, REML = F)
model8 <- lmer(lwage ~ union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(expersq|nr),data = df, REML = F)
model8 <- lmer(lwage ~ union+educ+exper+expersq+hisp+black+rur+married+poorhlth+(exper|nr),data = df, REML = F)
summary(model8)
model8 <- lmer(lwage ~ union+educ+exper+expersq+black+married+(exper|nr),data = df, REML = F)
summary(model8)
model8 <- gamlss(lwage ~ union+educ+exper+expersq+black+married,data = df, family = "NO")
plot(mmodel8)
plot(model8)
model8 <- gamlss(lwage ~ union+educ+exper+expersq+black+married,data = df, family = "PO")
model8 <- lmer(lwage ~ union+educ+exper+expersq+black+married+(1+educ+exper+expersq|union),data = df, REML = F)
ranova(model8)
model8 <- lmer(lwage ~ union+educ+exper+expersq+black+married+(1+educ+exper+expersq|nr),data = df, REML = F)
ranova(model8)
ggplot(data=popular2data, aes(x=extrav, y=popular, group=as.factor(class)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=popular2data, aes(x=exper, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=popular2data, aes(x=exper, y=lwage))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=popular2data, aes(x=expersq, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=popular2data, aes(x=exper, y=union, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=df, aes(x=exper, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=df, aes(x=expersq, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=df, aes(x=educ, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=df, aes(x=educ, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
ggplot(data=df, aes(x=hours, y=lwage, group=as.factor(nr)))+
geom_point(size=.7, col="grey", alpha=.8, position = "jitter")+
geom_smooth(method=lm,se=FALSE, col="black", size=.5, alpha=.8)+theme_minimal()+labs(title="Linear Relationship Between Popularity and Extraversion for 100 Classes", subtitle="The linear relationship between the two is not the same for all classes")
install.packages("cquad")
library(haven)
df <- read_dta("Z:/DesktopC/LUMSA/2/Data Mining/wagepan.dta")
View(df)
attach(df)
?cquad
model1 <- cquad(union ~ married + year, df)
library(cquad)
model1 <- cquad(union ~ married + year, df)
plot(model1)
summary(model1)
model1 <- cquad(union ~ married + as.factor(year), df)
model1 <- cquad(union ~ married + year, df)
model1 <- cquad(union ~ married + as.factor(year), df)
year2 <- df$year
year2[year2 == 1980 | year2 == 1981] <- 0
year2 <- as.factor(year2)
out2 <- cquad(union ~ married + year2, df, dyn = TRUE)
summary(out2)
year3 <- df$year
year3[year3 == 1980 | year3 == 1981 | year3 == 1987] <- 0
year3 <- as.factor(year3)
out3 <- cquad(union ~ married + year3, Union, model = "extended")
out3 <- cquad(union ~ married + year3, df, model = "extended")
summary(out3)
model1$coefficients
rm(model1)
rm(out2)
rm(out3)
rm/year2
rm(year2)
rm(year3)
?lmer
library(lme4) # for the analysis
library(haven) # to load the SPSS .sav file
library(tidyverse) # needed for data manipulation.
library(RColorBrewer) # needed for some extra colours in one of the graphs
library(lmerTest)# to get p-value estimations that are not part of the standard lme4 packages
install.packages("npmlreg")
library(npmlreg)
npmlreg?
a
?npmlreg
model1 <- allvc(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
model1 <- alldist(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
model1$coefficients
summary(model)
plot(model)
library(haven)
df <- read_dta("Z:/DesktopC/LUMSA/2/Data Mining/wagepan.dta")
View(df)
attach(df)
model1 <- alldist(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
summary(model)
summary(model1)
model1 <- allvc(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
AIC(model1)
BIC(model1)
model1$fitted.values
model1$linear.predictors
model1$disparity
model1$y
model1$post.prob
qqnorm(model1$residuals)
qqnorm(resid(model1))
plot(resid(model1))
model1$random
model1 <- allvc(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
model1 <- allvc(union ~ married + black, random = ~nr, family = "binomial", data = df, k=2, random.distribution = "np")
model1 <- alldist(union ~ married + black, random = ~nr, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(df$union)==1)
length(which(df$union==1))
length(which(model1$y==1))
model1 <- alldist(union ~ married + black, random = ~nr, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(model1$y==1))
length(which(df$union==1))
model1 <- alldist(union ~ married + black, random = ~1, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(model1$y==1))
model1 <- alldist(union ~ married + black, random = ~1|nr, family = "binomial", data = df, k=2, random.distribution = "np")
model1 <- allvc(union ~ married + black, random = ~1|nr, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(model1$y==1))
length(which(model1$y==1))
length(which(df$union==1))
model1 <- allvc(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(df$union==1))
length(which(model1$y==1))
model1 <- allvc(union ~ as.factor(years)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = "binomial", data = df, k=2, random.distribution = "np")
model1 <- allvc(union ~ as.factor(year)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = "binomial", data = df, k=2, random.distribution = "np")
length(which(df$union==1))
length(which(model1$y==1))
plot(model1)
plot(model1)
model1$linear.predictors
summary(model1)
anova(model1)
plot(model1, plot.opt = 15)
plot(model1, plot.opt = 11)
plot(model1, plot.opt = 10)
plot(model1, plot.opt = 11)
plot(model1, plot.opt = 1)
plot(model1, plot.opt = 20)
plot(model1, plot.opt = 15)
plot(model1, plot.opt = 16)
plot(model1, plot.opt = 17)
plot(model1, plot.opt = 15)
model1 <- allvc(union ~ as.factor(year)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = binomial, data = df, k=2, random.distribution = "np")
model1 <- allvc(union ~ as.factor(year)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = binomial, data = df, k=3, random.distribution = "np")
length(which(model1$y==1))
model1$fitted.values
length(which(model1$fitted.values > 1))
length(which(model1$fitted.values < 1))
length(which(model1$fitted.values < 0))
length(which(model1$fitted.values > 0.5))
plot(model1, plot.opt = 15)
length(which(model1$fitted.values > 0.5))
length(which(model1$fitted.values > 0.4))
length(which(model1$fitted.values > 0.2))
length(which(model1$fitted.values > 0.1))
length(which(model1$fitted.values > 0))
length(which(model1$fitted.values > 0.5))
which(model1$fitted.values > 0.5)
df$union[4257]
df$union[4258]
df$union[4259]
which(model1$fitted.values > 0.6)
df$union[4332]
df$union[4333]
df$union[4334]
df$union[4335]
df$union[4336]
df$union[4250]
df$union[4251]
df$union[4252]
df$union[4253]
df$union[4254]
df$union[4255]
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
install.packages("gamlss.mx")
library(gamlss.mx)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=4, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1, family = BI(), data = df, k=4, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=4, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1, family = BI(), data = df, k=5, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=5, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=6, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=10, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=4, mixture = "np", tol = 0.5)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=1, mixture = "np", tol = 0.5)
plot(model1)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model2 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=3, mixture = "np", tol = 0.5)
AIC(model1, model2)
model1 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2)
AIC(model1, model2, model3)
model3 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1+log(1+exper)+educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2, model3)
model3 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1+educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model3 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model4 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~log(1+exper)|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2, model3, model4)
AIC(model1, model2, model3)
model4 <- gamlssNP(union ~ dplyr::lag(union)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model4 <- gamlssNP(union ~ dplyr::lag(union, default=0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2, model3, model4)
summary(model4)
qr
qr(model4)
AIC(model1, model2, model3, model4)
year2 <- df$year
year2[year2 == 1980 | year2 == 1981] <- 0
year2 <- as.factor(year2)
model4 <- gamlssNP(union ~ year2+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
model4 <- gamlssNP(union ~ as.factor(year)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2, model3, model4)
model5 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np", tol = 0.5)
AIC(model1, model2, model3, model4,model5)
model5$data
model5$y
model5$y==1
length(which(model5$y==1))
model5$parameters
model5$N
model5$random
model5$mass.points
model5$df.fit
model5$Presiduals
summary(model5$Presiduals)
summary(model5$control
)
summary(model5$noObs)
typeof(model5)
fitted(model5)
summary(fitted(model5))
length(which(model5$y==1))
fitted(model5)
fitted(model5>10)
fitted(model5)>0.1
which(fitted(model5)>0.1)
which(fitted(model5)>0.4)
df$union[♦172]
df$union[172]
df$union[346]
which(fitted(model5)>0.45)
fitted(model5)[172]
fitted(model5)[346]
model6 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "qg", tol = 0.5)
model6 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "gq", tol = 0.5)
AIC(model1, model2, model3,model4,model5,model6)
model6 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=4, mixture = "gq", tol = 0.5)
AIC(model1, model2, model3,model4,model5,model6)
model6 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np")
AIC(model1, model2, model3,model4,model5,model6)
length(model6$y==1)
model6$y==1
model6$data
model6$y
?gamlssNP
model6$bd
length(which(model6$bd==1))
model6$N
model6$residuals
model6$K
model6 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np")
AIC(model1, model2, model3,model4,model5,model6)
model6$aic
model6$bic
model6$sbc
BIC(model1, model2, model3,model4,model5,model6)
model6$K
model5$K
model4$K
model2$K
model1$K
model1$y
model2$y
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=1, mixture = "np")
BIC(model1, model2, model3,model4,model5,model6,model7)
model7$K
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=3, mixture = "np")
BIC(model1, model2, model3,model4,model5,model6,model7)
model7$K
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=20, mixture = "np")
model7$K
BIC(model1, model2, model3,model4,model5,model6,model7)
AIC(model1, model2, model3,model4,model5,model6,model7)
plot(model7)
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~1|nr, family = BI(), data = df, k=2, mixture = "np")
AIC(model1, model2, model3,model4,model5,model6,model7)
plot(model7)
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~log(1+exper)ù|nr, family = BI(), data = df, k=20, mixture = "np")
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~log(1+exper)|nr, family = BI(), data = df, k=20, mixture = "np")
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~log(1+exper)|nr, family = BI(), data = df, k=2, mixture = "np")
model7 <- gamlssNP(union ~ log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np")
AIC(model1, model2, model3,model4,model5,model6,model7)
model7 <- gamlssNP(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south+agric+min+construc+manuf+tra+trad+fin+bus+per+ent+pro, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np")
AIC(model1, model2, model3,model4,model5,model6,model7)
BIC(model1, model2, model3,model4,model5,model6,model7)
summary(model7)
model7$parameters
model7$call
model7$converged
model7$bd
model7$orig.family
model7$random
model7$P.deviance
model7$df.fit
model7$contrasts
plot(model7)
model7 <- stepGAIC()(union ~ lag(union, default = 0)+log(1+exper)+educ+married+black+hisp+rur+poorhlth+nrthcen+nrtheast+south+agric+min+construc+manuf+tra+trad+fin+bus+per+ent+pro, random = ~educ|nr, family = BI(), data = df, k=2, mixture = "np")
stepGAIC()
stepGAIC(model7)
lmer
gamlss::gamlss(union ~ black + married, family = BI())
test <- gamlss::gamlss(union ~ black + married, family = BI())
stepGAIC(test)
test <- gamlss::gamlss(union ~ log(1+exper)+educ+black+married, family = BI())
stepGAIC(test)
test <- gamlss::gamlss(union ~ log(1+exper)+educ+black+married+dplyr::lag(union, default=0), family = BI(), data=df)
stepGAIC(test)
test <- gamlss::gamlss(union ~ log(1+exper)+educ+black+married+dplyr::lag(union, default=0)+hisp+rur+poorhlth+nrthcen+nrtheast+south, family = BI(), data=df)
stepGAIC(test)
stepGAIC(test,k = log(n))
stepGAIC(test, k = 2
)
stepGAIC(test, k = 2)
test <- gamlss::gamlss(union ~ log(1+exper)+educ+black+married+dplyr::lag(union, default=0)+hisp+rur+poorhlth+nrthcen+nrtheast+south+agric+min+construc+manuf+tra+trad+fin+bus+per+ent+pro+occ1+occ2+occ3+occ4+occ5+occ6+occ7+occ8, family = BI(), data=df)
stepGAIC(test, k = 2)
stepGAIC(test, k = log(2))
stepGAIC(test, k = 2)
stepGAIC(test, k = log(4360))
stepGAIC(test, k = 2)
stepGAIC(test, k = log(4360))
model8 <- gamlss(formula = union ~ black + dplyr::lag(union,      default = 0) + agric + construc + trad + fin +
bus + occ1 + occ2 + occ3, data = df, family = BI())
plot(model8)
AIC(model6,model7,model8)
BIC(model6,model7,model8)
model8$sbc
BIC(model6,model7,model8)
model8$sbc
model8$y
length(which(model8$y==1))
length(which(df$union==1))
model9 <- gamlss(formula = union ~ educ + black + married +      dplyr::lag(union, default = 0) + hisp + poorhlth +
nrthcen + nrtheast + agric + construc + manuf +      trad + fin + bus + per + ent + pro + occ1 + occ2 +
occ3 + occ4 + occ5 + occ6 + occ8, data = df, family = BI())
plot(model9)
length(which(model9$y==1))
model10 <- gamlss(formula = union ~ black + agric + construc + trad + fin +
bus + occ1 + occ2 + occ3, data = df, family = BI())
plot(model9)
plot(model10)
ranodm
random
random()
random(nr)
random(educ)
random(year)
random(as.factor(year))
gamlss::random(yer, df=df)
gamlss::random(year, df=df)
gamlss::random(as.factor(year), df=df)
model10 <- gamlss(formula = union ~ black + agric + construc + trad + fin +
bus + occ1 + occ2 + occ3, data = df, family = BI())
plot(model10)
plot(model9)
plot(model8)
model8$call
model10 <- gamlss(formula = union ~ random(nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ random(~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ random(~1|as.factor(nr))+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ re(~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ re(random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ re(random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(gamlss::random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(gamlss::random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,
family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(gamlss::random=~1|nr)+black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(gamlss::random=~1|nr)+black+dplyr::lag(union, default = 0)+agric + construc + trad + fin + bus + occ1 + occ2 + occ3,family = BI(), data = df)
model10 <- gamlss(formula = union ~ gamlss::re(random=~1|nr)+black+dplyr::lag(union, default = 0)+agric + construc + trad + fin + bus + occ1 + occ2 + occ3,family = BI(), data = df)
model10 <- gamlss(formula = union ~ random(as.factor(nr))+black+dplyr::lag(union, default = 0)+agric + construc + trad + fin + bus + occ1 + occ2 + occ3,family = BI(), data = df)
plot(model10)
summary(model10)
model11 <- gamlss(formula = union ~ random(as.factor(nr))+black+agric + construc + trad + fin + bus + occ1 + occ2 + occ3,family = BI(), data = df)
BIC(model9,model10,model11)
AIC(model9,model10,model11)
plot(model11)
plot(model10)
plot(model9)
plot(model8)
plot(model7)
plot(model8)
plot(model8)
plot(model8)
plot(model8)
plot(model8)
plot(model8)
plot(model8)
plot(model9)
plot(model10)
plot(model11)
AIC(model8,model11)
BIC(model8,model11)
summary(model8)
summary(model11)
summary(model10)
summary(model8)
model8$y
length(which(model8$y==1))
length(which(model11$y==1))
df[1:3488]
df[1:3488,]
model12 <- gamlss(formula = union ~ black + dplyr::lag(union,      default = 0) + agric + construc + trad + fin +
bus + occ1 + occ2 + occ3, data = df[1:3488,], family = BI())
model12
plot(model12)
length(which(model12$y))
length(which(model12$y==1))
model12
?predict
predict(model12)
predict(df[3488:-1,])
predict(df[3488:4360,])
predict(model12)
predict(model12, newdata = df[3488:4360])
predict(model12, newdata = df[3488:4360,])
predict(model12, newdata = df[3488:4360,])
predict(model12, newdata = df[3488:4360,])
test = df[3489:4360]
test = df[3489:4360,]
predict(model12, newdata = test)
predict(model12, newdata = test)
train = df[1:3488]
train = df[1:3488,]
View(train)
model12 <- gamlss(formula = union ~ black + dplyr::lag(union,      default = 0) + agric + construc + trad + fin +
bus + occ1 + occ2 + occ3, data = train, family = BI())
predict(model12, newdata = test)
predict(model12, newdata = test)[1]
test[1]
test$union[1]
predict(model12, newdata = test)[1]
test$union[1]
predict(model12, newdata = test)[2]
test$union[2]
predict(model12, newdata = test)[3]
test$union[4]
test$union[3]
model12$call
gamlssVGD
model12$call
gamlssVGD(formula = union ~ black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI(),rand = ~1|nr,newdata = test)
gamlssVGD(formula = union ~ black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI(),newdata = test)
gamlssVGD(formula = union ~ black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI,newdata = test)
gamlssVGD(formula = union ~ black + dplyr::lag(union, default = 0) +
agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI,newdata = test)
gamlssVGD(formula = union ~ black + dplyr::lag(union, default = 0) + agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI,newdata = test)
gamlssVGD(formula = union ~ black + agric + construc + trad + fin + bus + occ1 + occ2 + occ3,data = train,family = BI,newdata = test)
savehistory("C:/Users/X Fasada X/Downloads/history.Rhistory")
